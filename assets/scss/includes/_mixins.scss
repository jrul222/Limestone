@import 'mixins/m_layout';
@import 'mixins/m_typography';

// Strip decorations from unordered, ordered lists
@mixin no-decoration {
  margin: 0;
  padding: 0;
  list-style: none;

  &>li {
    margin-left: 0;
    text-indent: 0;

    &::before {
      display: none;
    }
  }
}

@mixin faux-underline($d: color(light-blue-tint), $h: color(wildcat-blue)) {
  $default: rgba($d, .4);
  $hover: rgba($h, .4);
  background: linear-gradient(to top, $default 0, $default 50%, transparent 2px, transparent 100%) scroll repeat-x 0 .5em, transparent linear-gradient(to top, $hover 0, $hover 2px, transparent 2px, transparent 100%) scroll repeat-x 0 0;
}

@mixin block-header-font {
  h2,
  h3,
  h4 {
    @include rr-font-compute(3xl, tight);
    font-weight: 500;
  }
}

// TODO: Document
@mixin block-spacing($border-color: wildcat-blue) {
  margin-right: rr-gridbase(-2);
  margin-left: rr-gridbase(-2);
  padding: rr-grid-remainder(3px, 2);
  border: 3px color($border-color) solid;

  @include rr-break-directive('m') {
    margin-right: 0;
    margin-left: 0;
    padding: rr-grid-remainder(3px, 3);
  }

  @include rr-break-directive('l') {
    padding: rr-grid-remainder(6px, 5);
    border-width: 6px;
  }
}

// This mixin is a convenience tool for setting link colors
// on the link/visited state and the hover/active state.
// Use inside an anchor tag.
//
// It's not necessary to use this.
@mixin link-colors($d: color(wildcat-black), $h: color(wildcat-blue)) {
  &:link,
  &:visited {
    color: $d;
  }

  &:hover,
  &:active {
    color: $h;
  }
}

// Adjust icon labels so the icons and labels 
// line up
@mixin icon-label-align {
  .icon-label {
    .ic {
      width: 1em;
    }

    .label {
      margin-left: .5em;
    }
  }
}

@mixin divider($centered: false, $color: wildcat-blue) {
  &::before {
    position: absolute;
    top: 0;
    width: 50px;
    height: 4px;
    background-color: color($color);
    content: '';
    @if $centered {
      left: 50%;
      transform: translateX(-50%);
    } @else {
      left: 0;
    }
  }
}

// generate the image url by prefixing the layout image path
@function image-url($url) {
  @return url('#{$image-url-path}#{$url}');
}

